<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.hm.cs.fwp.cloud</groupId>
	<artifactId>cna-spring-hello</artifactId>
	<version>0.9.0</version>
	<packaging>jar</packaging>
	<name>cna-spring-hello</name>
	<description>Simplest possible cloud native java application based on Spring Boot / Spring Cloud</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
	</parent>
	<prerequisites>
		<maven>3.5</maven>
	</prerequisites>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.organization.name>hmfwpcna</docker.organization.name>
		<docker.image.name>${docker.organization.name}/${project.artifactId}</docker.image.name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Spring Boot Actuator for monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- new dependencies for REST-based system tests -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.25.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>commit-stage</id>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*SystemTest.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dockerize-stage</id>
			<properties>
				<!-- <spring-boot.repackage.skip>true</spring-boot.repackage.skip> -->
				<target.route>http://192.168.99.100:8080</target.route>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-docker-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${project.basedir}/src/main/docker</directory>
										</resource>
										<resource>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.jar</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}/docker-resources</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>${docker.image.name}</name>
											<build>
												<dockerFileDir>${project.build.directory}/docker-resources</dockerFileDir>
												<tags>
													<tag>${project.version}</tag>
												</tags>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>push-docker-image</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>${docker.image.name}</name>
											<build>
												<dockerFileDir>${project.build.directory}/docker-resources</dockerFileDir>
												<tags>
													<tag>${project.version}</tag>
												</tags>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
							<!--
								<execution>
								<id>start-docker-containers</id>
								<phase>pre-integration-test</phase>
								<goals>
								<goal>start</goal>
								</goals>
								<configuration>
								<images>
								<image>
								<alias>springboot-first</alias>
								<name>${docker.image.name}</name>
								<external>
								<type>compose</type>
								<basedir>src/test/docker</basedir>
								<composeFile>docker-compose.yml</composeFile>
								</external>
								<run>
								<wait>
								<http>
								<url>${target.route}</url>
								<method>GET</method>
								<status>200..404</status>
								</http>
								<time>20000</time>
								</wait>
								</run>
								</image>
								</images>
								</configuration>
								</execution>
								<execution>
								<id>stop-docker-containers</id>
								<phase>post-integration-test</phase>
								<goals>
								<goal>stop</goal>
								</goals>
								<configuration>
								<images>
								<image>
								<alias>springboot-first</alias>
								<name>${docker.image.name}</name>
								<external>
								<type>compose</type>
								<basedir>src/test/docker</basedir>
								<composeFile>docker-compose.yml</composeFile>
								</external>
								</image>
								</images>
								</configuration>
								</execution>
							-->
						</executions>
					</plugin>
					<!--
						<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
						<skipTests>false</skipTests>
						<forkCount>0</forkCount>
						<includes><include>**/*SystemTest.java</include></includes>
						<systemPropertyVariables>
						<target.route>${target.route}</target.route>
						</systemPropertyVariables>
						</configuration>
						</plugin>
					-->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>